{
  "swagger": "2.0",
  "info": {
    "title": "user/user.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/users": {
      "get": {
        "operationId": "ListUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ListUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "not_completed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteUserResponse": {
      "type": "object"
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1ListUserResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "completed": {
          "type": "boolean",
          "format": "boolean",
          "title": "@inject_tag: sql:\",notnull,default:false\""
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "@inject_tag: sql:\"type:timestamptz,default:now()\""
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "@inject_tag: sql:\"type:timestamptz\""
        }
      }
    },
    "v1UpdateUserResponse": {
      "type": "object"
    }
  }
}